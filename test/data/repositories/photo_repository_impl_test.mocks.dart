// Mocks generated by Mockito 5.4.4 from annotations
// in clean_architecture_provider_fetching_images/test/data/repositories/photo_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:clean_architecture_provider_fetching_images/features/photo_listing/data/datasources/photo_local_data_source.dart'
    as _i5;
import 'package:clean_architecture_provider_fetching_images/features/photo_listing/data/datasources/photo_remote_data_source.dart'
    as _i2;
import 'package:clean_architecture_provider_fetching_images/features/photo_listing/data/model/photo_model.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [PhotoRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPhotoRemoteDataSource extends _i1.Mock
    implements _i2.PhotoRemoteDataSource {
  MockPhotoRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.PhotoModel>> getPhotos() => (super.noSuchMethod(
        Invocation.method(
          #getPhotos,
          [],
        ),
        returnValue: _i3.Future<List<_i4.PhotoModel>>.value(<_i4.PhotoModel>[]),
      ) as _i3.Future<List<_i4.PhotoModel>>);
}

/// A class which mocks [PhotoLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPhotoLocalDataSource extends _i1.Mock
    implements _i5.PhotoLocalDataSource {
  MockPhotoLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.PhotoModel>> getCachedPhotos() => (super.noSuchMethod(
        Invocation.method(
          #getCachedPhotos,
          [],
        ),
        returnValue: _i3.Future<List<_i4.PhotoModel>>.value(<_i4.PhotoModel>[]),
      ) as _i3.Future<List<_i4.PhotoModel>>);

  @override
  _i3.Future<void> cachePhotos(List<_i4.PhotoModel>? photos) =>
      (super.noSuchMethod(
        Invocation.method(
          #cachePhotos,
          [photos],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
